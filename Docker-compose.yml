version: "3.9"

services:
  frontend:
    build:
      context: ./app/frontend/
      dockerfile: Dockerfile
    volumes:
      - ./app/frontend/:/app
    command: ["flask", "run", "-p 5000"]
    ports:
      - "5000:5000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
    networks:
      - network_sso

  backend:
    build:
      context: .
      dockerfile: app/backend/Dockerfile
    volumes:
      - ./app/backend:/app
    command: [ "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8081", "--reload" ]
    ports:
      - "8081:8081"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
    networks:
      - network_sso

  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    command: start-dev
    env_file:
      - .env
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "-fsS", "http://keycloak:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 25
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - network_sso

  postgres:
    image: postgres:10
    env_file:
      - .env
    healthcheck:
      test: "exit 0"
    ports:
      - "5432:5432"
    networks:
      - network_sso
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:

networks:
  network_sso:
    driver: bridge